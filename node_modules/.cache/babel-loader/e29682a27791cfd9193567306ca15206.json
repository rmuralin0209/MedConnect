{"ast":null,"code":"var _jsxFileName = \"/Users/rachanamn/Documents/Internship/medhacks2020/MedConnect/src/screens/AddContact.js\";\nimport React, { Component } from 'react'; // import Navbar from '../components/Navbar';\n\nimport Navbar2 from '../components/Navbar2';\nimport Footer from '../components/Footer';\nimport { addItem } from '../config/firebase';\nimport Swal from 'sweetalert2';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../App.css';\nexport default class AddContact extends Component {\n  constructor() {\n    super();\n    this.state = {\n      contactEmail: \"\",\n      contactName: \"\",\n      showError: false,\n      registerFormError: \"\"\n    };\n    this.handleAddYourContactBtn = this.handleAddYourContactBtn.bind(this);\n  }\n\n  async handleAddYourContactBtn() {\n    const {\n      contactEmail,\n      contactName\n    } = this.state;\n    const contactEmailFormate = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!contactName) {\n      if (contactEmail.match(contactEmailFormate)) {\n        this.setState({\n          showError: false,\n          registerFormError: \"\",\n          contactEmail: ccontactEmail\n        });\n      } else {\n        this.setState({\n          showError: true,\n          registerFormError: \"Please enter a valid email address.\",\n          contactEmail: \"\"\n        });\n      }\n    } else if (!contactName) {\n      this.setState({\n        showError: true,\n        registerFormError: \"Invalid item ingredients.\"\n      });\n    } else {\n      this.setState({\n        showError: false,\n        registerFormError: \"\"\n      });\n      const contactDetails = {\n        contactEmail,\n        contactName: this.props.history\n      };\n\n      try {\n        const addContactReturn = await addItem(contactDetails); // console.log(addItemReturn)\n\n        Swal.fire({\n          title: 'Success',\n          text: addContactReturn,\n          type: 'success'\n        }).then(() => {\n          this.props.history.push('/my-foods');\n        });\n      } catch (error) {\n        // console.log(\"Error in add menu items => \", error)\n        Swal.fire({\n          title: 'Error',\n          text: error,\n          type: 'error'\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      showError,\n      registerFormError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid register-cont1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Navbar2, {\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container register-cont1-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-uppercase text-white text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 88\n      }\n    }, \"Add Your Contacts\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid py-5 bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-6 col-sm-12 mx-auto bg-white shadow p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"Add Contacts\"), /*#__PURE__*/React.createElement(\"form\", {\n      action: \"javascript:void(0)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contactEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 67\n      }\n    }, \"Contact Email\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"contactEmail\",\n      placeholder: \"Proper Email id\",\n      onChange: e => this.setState({\n        contactEmail: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contactName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 66\n      }\n    }, \"Contact Name\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"contactName\",\n      placeholder: \"Proper Name\",\n      onChange: e => this.setState({\n        contactName: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-warning text-uppercase mb-3\",\n      onClick: this.handleAddYourContactBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 139\n      }\n    }, \"Add your contact\"))))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/rachanamn/Documents/Internship/medhacks2020/MedConnect/src/screens/AddContact.js"],"names":["React","Component","Navbar2","Footer","addItem","Swal","AddContact","constructor","state","contactEmail","contactName","showError","registerFormError","handleAddYourContactBtn","bind","contactEmailFormate","match","setState","ccontactEmail","contactDetails","props","history","addContactReturn","fire","title","text","type","then","push","error","render","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import Navbar from '../components/Navbar';\nimport Navbar2 from '../components/Navbar2';\nimport Footer from '../components/Footer';\nimport { addItem } from '../config/firebase';\nimport Swal from 'sweetalert2'\n\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../App.css'\n\n\nexport default class AddContact extends Component {\n    constructor() {\n        super()\n        this.state = {\n            contactEmail: \"\",\n            contactName: \"\",\n            showError: false,\n            registerFormError: \"\",\n        }\n        this.handleAddYourContactBtn = this.handleAddYourContactBtn.bind(this)\n    }\n\n\n    async handleAddYourContactBtn() {\n        const { contactEmail, contactName } = this.state\n        const contactEmailFormate = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!contactName){\n        if (contactEmail.match(contactEmailFormate)) {\n            this.setState({\n                showError: false,\n                registerFormError: \"\",\n                contactEmail: ccontactEmail,\n            });\n        } else {\n            this.setState({\n                showError: true,\n                registerFormError: \"Please enter a valid email address.\",\n                contactEmail: \"\"\n            });\n        }\n        } else if (!contactName) {\n            this.setState({\n                showError: true,\n                registerFormError: \"Invalid item ingredients.\"\n            })\n        } else {\n            this.setState({\n                showError: false,\n                registerFormError: \"\"\n            })\n            const contactDetails = {\n                contactEmail, contactName: this.props.history,\n            }\n            try {\n                const addContactReturn = await addItem(contactDetails)\n                // console.log(addItemReturn)\n                Swal.fire({\n                    title: 'Success',\n                    text: addContactReturn,\n                    type: 'success',\n                }).then(() => {\n                    this.props.history.push('/my-foods')\n                })\n            } catch (error) {\n                // console.log(\"Error in add menu items => \", error)\n                Swal.fire({\n                    title: 'Error',\n                    text: error,\n                    type: 'error',\n                })\n            }\n        }\n    }\n\n    render() {\n        const { showError, registerFormError } = this.state;\n        return (\n            <div>\n                <div className=\"container-fluid register-cont1\">\n                    <div className=\"\">\n                        {/* <Navbar history={this.props.history} /> */}\n                        <Navbar2 history={this.props.history} />\n                        <div className=\"container register-cont1-text\">\n                            <h1 className=\"text-uppercase text-white text-center mb-4\"><strong>Add Your Contacts</strong></h1>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"container-fluid py-5 bg-light\">\n                    <div className=\"col-lg-6 col-md-6 col-sm-12 mx-auto bg-white shadow p-4\">\n                        <h2 className=\"text-center mb-4\">Add Contacts</h2>\n                        <form action=\"javascript:void(0)\">\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-6\">\n                                    <label htmlFor=\"contactEmail\"><b>Contact Email</b></label>\n                                    <input type=\"text\" className=\"form-control\" id=\"contactEmail\" placeholder=\"Proper Email id\" onChange={(e) => this.setState({ contactEmail: e.target.value })} />\n                                </div>\n                                <div className=\"form-group col-md-6\">\n                                    <label htmlFor=\"contactName\"><b>Contact Name</b></label>\n                                    <input type=\"text\" className=\"form-control\" id=\"contactName\" placeholder=\"Proper Name\" onChange={(e) => this.setState({ contactName: e.target.value })} />\n                                </div>\n                            </div>\n                           \n                            {/* <label className=\"mb-2\"><b>Choose Item Type</b></label>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-3\">\n                                    <div className=\"custom-control custom-radio\">\n                                        <input type=\"radio\" className=\"custom-control-input\" id=\"kebabs\" value=\"kebabs\" name=\"chooseItemType\" onChange={(e) => this.setState({ chooseItemType: e.target.value })} />\n                                        <label className=\"custom-control-label\" htmlFor=\"kebabs\">Kebabs</label>\n                                    </div>\n                                </div>\n                                <div className=\"form-group col-md-3\">\n                                    <div className=\"custom-control custom-radio\">\n                                        <input type=\"radio\" className=\"custom-control-input\" id=\"chicken\" value=\"chicken\" name=\"chooseItemType\" onChange={(e) => this.setState({ chooseItemType: e.target.value })} />\n                                        <label className=\"custom-control-label\" htmlFor=\"chicken\">Chicken</label>\n                                    </div>\n                                </div>\n                                <div className=\"form-group col-md-3\">\n                                    <div className=\"custom-control custom-radio\">\n                                        <input type=\"radio\" className=\"custom-control-input\" id=\"burgers\" value=\"burgers\" name=\"chooseItemType\" onChange={(e) => this.setState({ chooseItemType: e.target.value })} />\n                                        <label className=\"custom-control-label\" htmlFor=\"burgers\">Burgers</label>\n                                    </div>\n                                </div>\n                                <div className=\"form-group col-md-3\">\n                                    <div className=\"custom-control custom-radio\">\n                                        <input type=\"radio\" className=\"custom-control-input\" id=\"biryani\" value=\"biryani\" name=\"chooseItemType\" onChange={(e) => this.setState({ chooseItemType: e.target.value })} />\n                                        <label className=\"custom-control-label\" htmlFor=\"biryani\">Biryani</label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-3\">\n                                    <div className=\"custom-control custom-radio\">\n                                        <input type=\"radio\" className=\"custom-control-input\" id=\"sauces\" value=\"sauces\" name=\"chooseItemType\" onChange={(e) => this.setState({ chooseItemType: e.target.value })} />\n                                        <label className=\"custom-control-label\" htmlFor=\"sauces\">Sauces</label>\n                                    </div>\n                                </div>\n                                <div className=\"form-group col-md-3\">\n                                    <div className=\"custom-control custom-radio\">\n                                        <input type=\"radio\" className=\"custom-control-input\" id=\"vegetarian\" value=\"vegetarian\" name=\"chooseItemType\" onChange={(e) => this.setState({ chooseItemType: e.target.value })} />\n                                        <label className=\"custom-control-label\" htmlFor=\"vegetarian\">Vegetarian</label>\n                                    </div>\n                                </div>\n                                <div className=\"form-group col-md-3\">\n                                    <div className=\"custom-control custom-radio\">\n                                        <input type=\"radio\" className=\"custom-control-input\" id=\"bread\" value=\"bread\" name=\"chooseItemType\" onChange={(e) => this.setState({ chooseItemType: e.target.value })} />\n                                        <label className=\"custom-control-label\" htmlFor=\"bread\">Bread</label>\n                                    </div>\n                                </div>\n                                <div className=\"form-group col-md-3\">\n                                    <div className=\"custom-control custom-radio\">\n                                        <input type=\"radio\" className=\"custom-control-input\" id=\"specials\" value=\"specials\" name=\"chooseItemType\" onChange={(e) => this.setState({ chooseItemType: e.target.value })} />\n                                        <label className=\"custom-control-label\" htmlFor=\"specials\">Specials</label>\n                                    </div>\n                                </div> */}\n                           {/*  </div> */}\n                            {/* {showError ? <p className=\"text-danger\">{registerFormError}</p> : null} */}\n                            <button type=\"submit\" className=\"btn btn-warning text-uppercase mb-3\" onClick={this.handleAddYourContactBtn} ><b>Add your contact</b></button>\n                        </form>\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}