{"ast":null,"code":"import firebase from '../config/firebase';\nconst db = firebase.firestore();\n\nconst update_user = () => {\n  return dispatch => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // User is signed in.\n        // console.log(\"update_user =>>\", user.uid)\n        db.collection('users').doc(user.uid).get().then(snapshot => {\n          // console.log(\"snapshot.data =>>\", snapshot.data());\n          dispatch({\n            type: 'SET_USER',\n            user: { ...snapshot.data(),\n              isLogin: true\n            }\n          });\n        });\n      } else {// No user is signed in.\n      }\n    });\n  };\n};\n\nconst remove_user = () => {\n  return dispatch => {\n    firebase.auth().signOut().then(() => {\n      // Sign-out successful.\n      console.log(\"Successfully log out\");\n      dispatch({\n        type: 'REMOVE_USER',\n        user: {\n          isLogin: false\n        }\n      });\n    }).catch(error => {\n      // An error happened.\n      let errorMessage = error.message;\n      console.log(\"Log Out Error Message => \", errorMessage);\n    });\n  };\n};\n\nconst order_request = () => {\n  return dispatch => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // console.log(\"user uid => \", user.uid)\n        db.collection('users').doc(user.uid).collection(\"orderRequest\").onSnapshot(snapshot => {\n          const orderRequest = [];\n          snapshot.forEach(doc => {\n            const obj = {\n              id: doc.id,\n              ...doc.data()\n            }; // console.log(\"Order Request From Action => \", obj)\n\n            orderRequest.push(obj);\n          });\n          dispatch({\n            type: 'ORDER_REQUEST',\n            orderRequest: orderRequest\n          });\n        });\n      }\n    });\n  };\n};\n\nconst my_order = () => {\n  return dispatch => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // console.log(\"user uid => \", user.uid)\n        db.collection('users').doc(user.uid).collection(\"myOrder\").onSnapshot(snapshot => {\n          const myOrder = [];\n          snapshot.forEach(doc => {\n            const obj = {\n              id: doc.id,\n              ...doc.data()\n            }; // console.log(\"Order Request From Action => \", obj)\n\n            myOrder.push(obj);\n          });\n          dispatch({\n            type: 'MY_ORDER',\n            myOrder: myOrder\n          });\n        });\n      }\n    });\n  };\n};\n\nconst my_foods = () => {\n  return dispatch => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // console.log(\"user uid => \", user.uid)\n        db.collection('users').doc(user.uid).collection(\"menuItems\").onSnapshot(snapshot => {\n          const myFoods = [];\n          snapshot.forEach(doc => {\n            const obj = {\n              id: doc.id,\n              ...doc.data()\n            }; // console.log(\"Order Request From Action => \", obj)\n\n            myFoods.push(obj);\n          });\n          dispatch({\n            type: 'MY_FOODS',\n            myFoods: myFoods\n          });\n        });\n      }\n    });\n  };\n};\n\nexport { update_user, remove_user, order_request, my_order, my_foods };","map":{"version":3,"sources":["/Users/rachanamn/Documents/Internship/medhacks2020/MedConnect copy/src/store/action.js"],"names":["firebase","db","firestore","update_user","dispatch","auth","onAuthStateChanged","user","collection","doc","uid","get","then","snapshot","type","data","isLogin","remove_user","signOut","console","log","catch","error","errorMessage","message","order_request","onSnapshot","orderRequest","forEach","obj","id","push","my_order","myOrder","my_foods","myFoods"],"mappings":"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","sourcesContent":["import firebase from '../config/firebase';\nconst db = firebase.firestore();\n\nconst update_user = () => {\n    return (dispatch) => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                // User is signed in.\n                // console.log(\"update_user =>>\", user.uid)\n                db.collection('users').doc(user.uid).get().then((snapshot) => {\n                    // console.log(\"snapshot.data =>>\", snapshot.data());\n                    dispatch({\n                        type: 'SET_USER',\n                        user: { ...snapshot.data(), isLogin: true }\n                    })\n                })\n            } else {\n                // No user is signed in.\n            }\n\n        });\n    }\n}\n\nconst remove_user = () => {\n    return (dispatch) => {\n        firebase.auth().signOut().then(() => {\n            // Sign-out successful.\n            console.log(\"Successfully log out\");\n            dispatch({\n                type: 'REMOVE_USER',\n                user: { isLogin: false }\n            })\n        }).catch((error) => {\n            // An error happened.\n            let errorMessage = error.message;\n            console.log(\"Log Out Error Message => \", errorMessage);\n        });\n    }\n}\n\n\nconst order_request = () => {\n    return (dispatch) => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                // console.log(\"user uid => \", user.uid)\n                db.collection('users').doc(user.uid).collection(\"orderRequest\").onSnapshot(snapshot => {\n                    const orderRequest = [];\n                    snapshot.forEach(doc => {\n                        const obj = { id: doc.id, ...doc.data() }\n                        // console.log(\"Order Request From Action => \", obj)\n                        orderRequest.push(obj)\n                    })\n                    dispatch({\n                        type: 'ORDER_REQUEST',\n                        orderRequest: orderRequest,\n                    })\n                })\n            }\n        });\n    }\n}\n\nconst my_order = () => {\n    return (dispatch) => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                // console.log(\"user uid => \", user.uid)\n                db.collection('users').doc(user.uid).collection(\"myOrder\").onSnapshot(snapshot => {\n                    const myOrder = [];\n                    snapshot.forEach(doc => {\n                        const obj = { id: doc.id, ...doc.data() }\n                        // console.log(\"Order Request From Action => \", obj)\n                        myOrder.push(obj)\n                    })\n                    dispatch({\n                        type: 'MY_ORDER',\n                        myOrder: myOrder,\n                    })\n                })\n            }\n        });\n    }\n}\n\nconst my_foods = () => {\n    return (dispatch) => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                // console.log(\"user uid => \", user.uid)\n                db.collection('users').doc(user.uid).collection(\"menuItems\").onSnapshot(snapshot => {\n                    const myFoods = [];\n                    snapshot.forEach(doc => {\n                        const obj = { id: doc.id, ...doc.data() }\n                        // console.log(\"Order Request From Action => \", obj)\n                        myFoods.push(obj)\n                    })\n                    dispatch({\n                        type: 'MY_FOODS',\n                        myFoods: myFoods,\n                    })\n                })\n            }\n        });\n    }\n}\n\n\nexport {\n    update_user,\n    remove_user,\n    order_request,\n    my_order,\n    my_foods,\n}"]},"metadata":{},"sourceType":"module"}