{"ast":null,"code":"import * as firebase from 'firebase';\nimport 'firebase/firestore';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAwF3vVC0EyminLjle-7tUKZKiYGtW9f3E\",\n  authDomain: \"medconnect-6fdaa.firebaseapp.com\",\n  databaseURL: \"https://medconnect-6fdaa.firebaseio.com\",\n  projectId: \"medconnect-6fdaa\",\n  storageBucket: \"medconnect-6fdaa.appspot.com\",\n  messagingSenderId: \"290600307048\",\n  appId: \"1:290600307048:web:47a8ef7920a84794db6edd\",\n  measurementId: \"G-T15HBFSXWJ\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction sendSurvey(itemDetails) {\n  const {\n    date,\n    fever,\n    chill,\n    cough,\n    diffBreathe,\n    soreThroat,\n    aches,\n    diarrhea,\n    fatigue,\n    congestion,\n    tasteLoss\n  } = itemDetails;\n  return new Promise((resolve, reject) => {\n    let user = firebase.auth().currentUser;\n    var uid;\n\n    if (user != null) {\n      uid = user.uid;\n    }\n\n    ;\n    firebase.storage().ref().child(`Surveys/${uid}/`).put(uid).then(url => {\n      url.ref.getDownloadURL().then(success => {\n        const itemIDUrl = success;\n        console.log(itemIDUrl);\n        const itemDetailsForDb = {\n          itemIDUrl: itemIDUrl,\n          date: date,\n          fever: fever,\n          chill: chill,\n          cough: cough,\n          diffBreathe: diffBreathe,\n          soreThroat: soreThroat,\n          aches: aches,\n          diarrhea: diarrhea,\n          fatigue: fatigue,\n          congestion: congestion,\n          tasteLoss: tasteLoss // userUid: uid,\n\n        };\n        db.collection(\"users\").doc(uid).collection(\"surveys\").add(itemDetailsForDb).then(docRef => {\n          // console.log(\"Document written with ID: \", docRef.id);\n          resolve(\"Successfully added food item\");\n        }).catch(function (error) {\n          let errorCode = error.code;\n          let errorMessage = error.message;\n          reject(errorMessage); // console.error(\"Error adding document: \", error);\n        });\n      }).catch(error => {\n        // Handle Errors here.\n        let errorCode = error.code;\n        let errorMessage = error.message;\n        console.log(\"Error in getDownloadURL function\", errorCode);\n        console.log(\"Error in getDownloadURL function\", errorMessage);\n        reject(errorMessage);\n      });\n    }).catch(error => {\n      // Handle Errors here.\n      let errorCode = error.code;\n      let errorMessage = error.message;\n      console.log(\"Error in Image Uploading\", errorMessage);\n      reject(errorMessage);\n    });\n  });\n} // TODO Modify for our firebase \n\n\nfunction signUp(userDetails) {\n  return new Promise((resolve, reject) => {\n    console.log(\"Start 1\");\n    const {\n      userName,\n      userEmail,\n      userPassword,\n      userZip,\n      userAge,\n      userStatus\n    } = userDetails;\n    console.log(\"Start 2\");\n    firebase.auth().createUserWithEmailAndPassword(userDetails.userEmail, userDetails.userPassword).then(success => {\n      console.log(\"Start 3\");\n      let user = firebase.auth().currentUser;\n      var uid;\n\n      if (user != null) {\n        uid = user.uid;\n      }\n\n      ;\n      console.log(\"Start 4\");\n      firebase.storage().ref().child(`Users/${uid}/`).put(uid).then(url => {\n        console.log(\"Start 5\");\n        url.ref.getDownloadURL().then(success => {\n          console.log(\"Start 6\");\n          const userIDUrl = success;\n          console.log(userIDUrl);\n          const userDetailsForDb = {\n            userUid: uid,\n            userName: userName,\n            userEmail: userEmail,\n            userPassword: userPassword,\n            userZip: userZip,\n            userAge: userAge,\n            userStatus: userStatus\n          };\n          db.collection(\"users\").doc(uid).set(userDetailsForDb).then(docRef => {\n            // console.log(\"Document written with ID: \", docRef.id);\n            userDetails.propsHistory.push(\"/\");\n            resolve(userDetailsForDb);\n          }).catch(function (error) {\n            console.error(\"Error adding document: \", error);\n            reject(error);\n          });\n        }).catch(error => {\n          // Handle Errors here.\n          let errorCode = error.code;\n          let errorMessage = error.message;\n          console.log(\"Error in getDownloadURL function\", errorMessage);\n          reject(errorMessage);\n        });\n      }).catch(error => {\n        // Handle Errors here.\n        let errorCode = error.code;\n        let errorMessage = error.message;\n        console.log(\"Error in Image Uploading\", errorMessage);\n        reject(errorMessage);\n      });\n    }).catch(error => {\n      var errorMessage = error.message;\n      console.log(\"Error in Authentication\", errorMessage);\n      reject(errorMessage);\n    });\n  });\n} // Modify for our firebase\n\n\nfunction logIn(userLoginDetails) {\n  return new Promise((resolve, reject) => {\n    const {\n      userLoginEmail,\n      userLoginPassword\n    } = userLoginDetails;\n    firebase.auth().signInWithEmailAndPassword(userLoginEmail, userLoginPassword).then(success => {\n      db.collection('users').doc(success.user.uid).get().then(snapshot => {\n        userLoginDetails.propsHistory.push(\"/home\");\n        resolve(success);\n      });\n    }).catch(error => {\n      // Handle Errors here.\n      // var errorCode = error.code;\n      var errorMessage = error.message;\n      reject(errorMessage);\n    });\n  });\n} // Could use for survey\n\n\nfunction addItem(itemDetails) {\n  const {\n    contactName,\n    contactEmail,\n    itemImage\n  } = itemDetails;\n  return new Promise((resolve, reject) => {\n    let user = firebase.auth().currentUser;\n    var uid;\n\n    if (user != null) {\n      uid = user.uid;\n    }\n\n    ;\n    firebase.storage().ref().child(`itemImage/${uid}/` + itemImage.name).put(itemImage).then(url => {\n      url.ref.getDownloadURL().then(success => {\n        const itemImageUrl = success;\n        console.log(itemImageUrl);\n        const itemDetailsForDb = {\n          itemImageUrl: itemImageUrl,\n          contactEmail: contactEmail,\n          contactName: contactName\n        };\n        db.collection(\"users\").doc(uid).collection(\"menuItems\").add(itemDetailsForDb).then(docRef => {\n          resolve(\"Successfully added Contact\");\n        }).catch(function (error) {\n          let errorCode = error.code;\n          let errorMessage = error.message;\n          reject(errorMessage);\n        });\n      }).catch(error => {\n        let errorCode = error.code;\n        let errorMessage = error.message;\n        console.log(\"Error in getDownloadURL function\", errorCode);\n        console.log(\"Error in getDownloadURL function\", errorMessage);\n        reject(errorMessage);\n      });\n    }).catch(error => {\n      let errorCode = error.code;\n      let errorMessage = error.message;\n      console.log(\"Error in Image Uploading\", errorMessage);\n      reject(errorMessage);\n    });\n  });\n}\n\nexport default firebase;\nexport { signUp, logIn, addItem, sendSurvey };","map":{"version":3,"sources":["/Users/rachanamn/Documents/Internship/medhacks2020/MedConnect/src/config/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","db","firestore","sendSurvey","itemDetails","date","fever","chill","cough","diffBreathe","soreThroat","aches","diarrhea","fatigue","congestion","tasteLoss","Promise","resolve","reject","user","auth","currentUser","uid","storage","ref","child","put","then","url","getDownloadURL","success","itemIDUrl","console","log","itemDetailsForDb","collection","doc","add","docRef","catch","error","errorCode","code","errorMessage","message","signUp","userDetails","userName","userEmail","userPassword","userZip","userAge","userStatus","createUserWithEmailAndPassword","userIDUrl","userDetailsForDb","userUid","set","propsHistory","push","logIn","userLoginDetails","userLoginEmail","userLoginPassword","signInWithEmailAndPassword","get","snapshot","addItem","contactName","contactEmail","itemImage","name","itemImageUrl"],"mappings":"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","sourcesContent":["import * as firebase from 'firebase';\nimport 'firebase/firestore'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAwF3vVC0EyminLjle-7tUKZKiYGtW9f3E\",\n    authDomain: \"medconnect-6fdaa.firebaseapp.com\",\n    databaseURL: \"https://medconnect-6fdaa.firebaseio.com\",\n    projectId: \"medconnect-6fdaa\",\n    storageBucket: \"medconnect-6fdaa.appspot.com\",\n    messagingSenderId: \"290600307048\",\n    appId: \"1:290600307048:web:47a8ef7920a84794db6edd\",\n    measurementId: \"G-T15HBFSXWJ\"\n  };\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\n\n\nfunction sendSurvey(itemDetails) {\n    const { date, fever, chill, cough, diffBreathe, soreThroat, aches, diarrhea, fatigue, congestion, tasteLoss } = itemDetails;\n    return new Promise((resolve, reject) => {\n        let user = firebase.auth().currentUser;\n        var uid;\n        if (user != null) {\n            uid = user.uid;\n        };\n        firebase.storage().ref().child(`Surveys/${uid}/`).put(uid).then((url) => {\n            url.ref.getDownloadURL().then((success) => {\n                const itemIDUrl = success\n                console.log(itemIDUrl)\n                const itemDetailsForDb = {\n\n                    itemIDUrl: itemIDUrl,\n                    date: date,\n                    fever: fever,\n                    chill: chill,\n                    cough: cough,\n                    diffBreathe: diffBreathe,\n                    soreThroat: soreThroat,\n                    aches: aches,\n                    diarrhea: diarrhea,\n                    fatigue: fatigue,\n                    congestion: congestion,\n                    tasteLoss: tasteLoss,\n                    // userUid: uid,\n                }\n                db.collection(\"users\").doc(uid).collection(\"surveys\").add(itemDetailsForDb).then((docRef) => {\n                    // console.log(\"Document written with ID: \", docRef.id);\n                    resolve(\"Successfully added food item\")\n                }).catch(function (error) {\n                    let errorCode = error.code;\n                    let errorMessage = error.message;\n                    reject(errorMessage)\n                    // console.error(\"Error adding document: \", error);\n                })\n            }).catch((error) => {\n                // Handle Errors here.\n                let errorCode = error.code;\n                let errorMessage = error.message;\n                console.log(\"Error in getDownloadURL function\", errorCode);\n                console.log(\"Error in getDownloadURL function\", errorMessage);\n                reject(errorMessage)\n            })\n        }).catch((error) => {\n            // Handle Errors here.\n            let errorCode = error.code;\n            let errorMessage = error.message;\n            console.log(\"Error in Image Uploading\", errorMessage);\n            reject(errorMessage)\n        })\n\n    })\n}\n\n// TODO Modify for our firebase \nfunction signUp(userDetails) {\n    return new Promise((resolve, reject) => {\n        console.log(\"Start 1\")\n        const { userName, userEmail, userPassword, userZip, userAge, userStatus } = userDetails;\n        console.log(\"Start 2\")\n        firebase.auth().createUserWithEmailAndPassword(userDetails.userEmail, userDetails.userPassword).then((success) => {\n            console.log(\"Start 3\")\n            let user = firebase.auth().currentUser;\n            var uid;\n            if (user != null) {\n                uid = user.uid;\n            };\n            console.log(\"Start 4\")\n            firebase.storage().ref().child(`Users/${uid}/`).put(uid).then((url) => {\n                console.log(\"Start 5\")\n                url.ref.getDownloadURL().then((success) => {\n                    console.log(\"Start 6\")\n                    const userIDUrl = success\n                    console.log(userIDUrl)\n                    const userDetailsForDb = {\n                        userUid: uid,\n                        userName: userName,\n                        userEmail: userEmail,\n                        userPassword: userPassword,\n                        userZip: userZip,\n                        userAge: userAge,\n                        userStatus: userStatus,\n                    }\n                    db.collection(\"users\").doc(uid).set(userDetailsForDb).then((docRef) => {\n                        // console.log(\"Document written with ID: \", docRef.id);\n                        userDetails.propsHistory.push(\"/\");\n                        resolve(userDetailsForDb)\n\n                    }).catch(function (error) {\n                        console.error(\"Error adding document: \", error);\n                        reject(error)\n                    })\n                }).catch((error) => {\n                    // Handle Errors here.\n                    let errorCode = error.code;\n                    let errorMessage = error.message;\n                    console.log(\"Error in getDownloadURL function\", errorMessage);\n                    reject(errorMessage)\n                })\n            }).catch((error) => {\n                // Handle Errors here.\n                let errorCode = error.code;\n                let errorMessage = error.message;\n                console.log(\"Error in Image Uploading\", errorMessage);\n                reject(errorMessage)\n            })\n        }).catch((error) => {\n            var errorMessage = error.message;\n            console.log(\"Error in Authentication\", errorMessage);\n            reject(errorMessage)\n        })\n    })\n}\n\n// Modify for our firebase\nfunction logIn(userLoginDetails) {\n    return new Promise((resolve, reject) => {\n        const { userLoginEmail, userLoginPassword } = userLoginDetails;\n        firebase.auth().signInWithEmailAndPassword(userLoginEmail, userLoginPassword).then((success) => {\n            db.collection('users').doc(success.user.uid).get().then((snapshot) => {\n                userLoginDetails.propsHistory.push(\"/home\");\n                resolve(success)            \n            })\n        }).catch((error) => {\n            // Handle Errors here.\n            // var errorCode = error.code;\n            var errorMessage = error.message;\n            reject(errorMessage)\n        });\n\n    })\n}\n\n// Could use for survey\nfunction addItem(itemDetails) {\n    const { contactName, contactEmail, itemImage } = itemDetails;\n    return new Promise((resolve, reject) => {\n        let user = firebase.auth().currentUser;\n        var uid;\n        if (user != null) {\n            uid = user.uid;\n        };\n        firebase.storage().ref().child(`itemImage/${uid}/` + itemImage.name).put(itemImage).then((url) => {\n            url.ref.getDownloadURL().then((success) => {\n                const itemImageUrl = success\n                console.log(itemImageUrl)\n                const itemDetailsForDb = {\n                   \n                    itemImageUrl: itemImageUrl,\n                    contactEmail: contactEmail,\n                    contactName: contactName,\n                }\n                db.collection(\"users\").doc(uid).collection(\"menuItems\").add(itemDetailsForDb).then((docRef) => {\n\n                    resolve(\"Successfully added Contact\")\n                }).catch(function (error) {\n                    let errorCode = error.code;\n                    let errorMessage = error.message;\n                    reject(errorMessage)\n\n                })\n            }).catch((error) => {\n                let errorCode = error.code;\n                let errorMessage = error.message;\n                console.log(\"Error in getDownloadURL function\", errorCode);\n                console.log(\"Error in getDownloadURL function\", errorMessage);\n                reject(errorMessage)\n            })\n        }).catch((error) => {\n            let errorCode = error.code;\n            let errorMessage = error.message;\n            console.log(\"Error in Image Uploading\", errorMessage);\n            reject(errorMessage)\n        })\n        \n    })\n }\n\n\n\nexport default firebase;\nexport {\n    signUp,\n    logIn,\n    addItem,\n    sendSurvey,\n\n\n\n    // DONE YAYAYAYA\n    // signUp\n    // logIn\n\n\n    // TODO for Rachana\n    // addContact\n    // removeContact\n\n    // Make the survey\n    // submitSurvey\n\n    // Official Covid Test\n    \n\n}"]},"metadata":{},"sourceType":"module"}